-- Project: Measures by Dimension
-- Goal: Analyze key business metrics (customers, revenue, products) across multiple dimensions.
-- This file contains several queries that explore:
--   • Number of customers by country and gender
--   • Average cost and total revenue per product category
--   • Revenue by customer and distribution of sold items by country
--   • Top 5 and bottom 5 products based on revenue
--   • Top 10 customers by total revenue
--   • Customers with the fewest orders placed
--
-- Purpose: To identify trends and insights across customer, product, and geographic dimensions.
-- Find total customers by country
SELECT 
country,
COUNT(customer_key) AS total_customers
FROM [gold.dim_customers]
GROUP BY country
ORDER BY total_customers DESC

-- Find total customers by gender
SELECT
gender,
COUNT(customer_key) AS total_customers
FROM [gold.dim_customers]
GROUP BY gender
ORDER BY total_customers DESC

-- Find total products per category
SELECT
category,
COUNT(product_key) AS total_products
FROM [gold.dim_products]
GROUP BY category
ORDER BY total_products DESC

-- What is the average cost in each category
SELECT
category,
AVG(cost) AS avg_cost
FROM [gold.dim_products]
GROUP BY category
ORDER BY avg_cost DESC

-- What is the total revenue generated for each category
SELECT
p.category,
SUM(f.sales_amount) AS total_revenue
FROM [gold.fact_sales] as f LEFT JOIN [gold.dim_products] as p on f.product_key=p.product_key
GROUP BY p.category
ORDER BY total_revenue DESC

-- What is the total revenue generated by each customer?
SELECT 
c.customer_key,
c.first_name,
c.last_name,
SUM(s.sales_amount) AS total_revenue
FROM [gold.dim_customers] AS c LEFT JOIN [gold.fact_sales] AS s ON c.customer_key=s.customer_key
group by c.customer_key,
c.first_name,
c.last_name
order by total_revenue desc

-- What is the distribution of sold items across countries?
select
c.country,
sum(s.quantity) as total_sold_items
from [gold.fact_sales] as s left join [gold.dim_customers] as c on s.customer_key=c.customer_key
group by c.country
order by total_sold_items desc

-- Which 5 products generate the highest revenue?
select top 5
p.product_name,
sum(s.sales_amount) as revenue
from [gold.dim_products] as p left join [gold.fact_sales] as  s on p.product_key=s.product_key
group by p.product_name
order by revenue desc

-- What are the 5 worst performing products in terms of sales?
select top 5
p.product_name,
coalesce(sum(s.sales_amount),9999999) as revenue
from [gold.dim_products] as p left join [gold.fact_sales] as  s on p.product_key=s.product_key
group by p.product_name
order by revenue asc
-- top 5 using rank
select
*
from
(select
p.product_name,
sum(s.sales_amount) as revenue,
rank() over (order by sum(s.sales_amount)desc) as rank
from [gold.dim_products] as p left join [gold.fact_sales] as  s on p.product_key=s.product_key
group by p.product_name)t
where rank<=5
-- Find the top 10 customers who have generated the highest revenue
select
*
from
(select
c.customer_key,
c.first_name,
c.last_name,
sum(s.sales_amount) as revenue,
rank() over (order by sum(s.sales_amount)desc) as rank
from [gold.dim_customers] as c left join [gold.fact_sales] as  s on c.customer_key=s.customer_key
group by 
c.customer_key,
c.first_name,
c.last_name )t
where rank<=10

-- The 3 customers with the fewest orders placed

select top 3
c.customer_key,
c.first_name,
c.last_name,
count(distinct s.order_number) as total_orders
from [gold.dim_customers] as c left join [gold.fact_sales] as  s on c.customer_key=s.customer_key
group by 
c.customer_key,
c.first_name,
c.last_name 
order by total_orders 
